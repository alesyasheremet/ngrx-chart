{"ast":null,"code":"import { webSocket } from 'rxjs/webSocket';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport const WS_ENDPOINT = environment.wsEndpoint;\nexport let DataService = /*#__PURE__*/(() => {\n  class DataService {\n    constructor() {}\n    connect() {\n      if (!this.socket$ || this.socket$.closed) {\n        this.socket$ = webSocket(WS_ENDPOINT);\n      }\n      return this.socket$;\n    }\n    dataUpdates$() {\n      return this.connect().asObservable();\n    }\n    closeConnection() {\n      this.connect().complete();\n    }\n    sendMessage(msg) {\n      this.socket$.next(msg);\n    }\n  }\n  DataService.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)();\n  };\n  DataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/data.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./live-table/live-table.component\";\nimport * as i4 from \"./charts/inventory/inventory.component\";\nimport * as i5 from \"./charts/monthly-cash/monthly-cash.component\";\nimport * as i6 from \"./cash-info/cash-info.component\";\nconst _c0 = [\"chart\"];\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(service) {\n      this.service = service;\n      this.title = 'client-angular';\n      this.message = 'Hello';\n      // let tempData: any;\n      // this.barData$ = of(this.barData);\n      // this.service.wsSubject().subscribe(msg => {\n      //   console.log('I received this message: ' + msg);\n      // tempData = this.barData$;\n      // tempData['value'].datasets[0].data = tempData['value'].datasets[0].data.filter(x=>x>15).map(\n      //   x => x * 2\n      // );\n      // this.barData$ = tempData;\n      // this.chart.reinit();\n      // });\n    }\n\n    sendToServer($event) {\n      // this.subject.next(this.message);\n      this.service.connect().error({\n        code: 4000,\n        reason: 'I think our app just broke!'\n      });\n      // this.service.wsSubject().complete();\n      // this.service.wsSubject().next('Hi');\n      // 1st way\n      // const subject$ = webSocket( 'ws://localhost:8081');\n      // 2nd way\n      // const subject$ = webSocket({\n      //        url: 'ws://localhost:8081',\n      //        // Apply any transformation of your choice.\n      //       deserializer: (e) => JSON.parse(e.data),\n      //       // Apply any transformation of your choice.\n      //       serializer: (value) => JSON.stringify(value),\n      //       openObserver: {\n      //         next: () => {\n      //           console.log('Connetion established');\n      //         }\n      //        },\n      //       closeObserver: {\n      //         next() {\n      //             const customError = { code: 4040, reason: 'Custom reason' };\n      //             console.log(`code: ${customError.code}, reason: ${customError.reason}`);\n      //         },\n      //       },\n      //    });\n      // }\n    }\n\n    unsubscribe($event) {\n      this.service.connect().unsubscribe();\n    }\n    subscribe($event) {\n      this.service.connect().subscribe();\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 0,\n    consts: [[1, \"row\"], [1, \"ng-inventor-column\"], [1, \"ng-cash-column\"], [1, \"ng-cash-month-column\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-inventory\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"app-cash-info\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"app-monthly-cash\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(7, \"app-live-table\")(8, \"router-outlet\");\n      }\n    },\n    dependencies: [i2.RouterOutlet, i3.LiveTableComponent, i4.InventoryComponent, i5.MonthlyCashComponent, i6.CashInfoComponent]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}